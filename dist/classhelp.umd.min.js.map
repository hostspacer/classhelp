{
  "version": 3,
  "file": "classhelp.umd.min.js",
  "sources": ["../src/index.js"],
  "sourcesContent": [
    "/*!\n * classhelp - chainable, cross-browser class helper (UMD)\n */\n\n(function (global, factory) {\n  if (typeof define === 'function' && define.amd) {\n    define(factory);\n  } else {\n    global.classhelp = factory();\n  }\n})(typeof window !== 'undefined' ? window : this, function () {\n  'use strict';\n\n  function getClassRegExp(className) {\n    return new RegExp(\"(^|\\\\s+)\" + className + \"(\\\\s+|$)\");\n  }\n\n  let hasClass, addClass, removeClass, toggleClass;\n\n  if ('classList' in document.documentElement) {\n    hasClass = function (el, cls) {\n      return el.classList.contains(cls);\n    };\n    addClass = function (el, cls) {\n      el.classList.add(cls);\n    };\n    removeClass = function (el, cls) {\n      el.classList.remove(cls);\n    };\n    toggleClass = function (el, cls) {\n      el.classList.toggle(cls);\n    };\n  } else {\n    hasClass = function (el, cls) {\n      return getClassRegExp(cls).test(el.className);\n    };\n    addClass = function (el, cls) {\n      if (!hasClass(el, cls)) {\n        el.className = (el.className + ' ' + cls).trim();\n      }\n    };\n    removeClass = function (el, cls) {\n      el.className = el.className.replace(getClassRegExp(cls), ' ').trim();\n    };\n    toggleClass = function (el, cls) {\n      if (hasClass(el, cls)) {\n        removeClass(el, cls);\n      } else {\n        addClass(el, cls);\n      }\n    };\n  }\n\n  function classhelp(el) {\n    return {\n      add: function (cls) {\n        addClass(el, cls);\n        return this;\n      },\n      addClass: function (cls) {\n        addClass(el, cls);\n        return this;\n      },\n      remove: function (cls) {\n        removeClass(el, cls);\n        return this;\n      },\n      removeClass: function (cls) {\n        removeClass(el, cls);\n        return this;\n      },\n      toggle: function (cls) {\n        toggleClass(el, cls);\n        return this;\n      },\n      toggleClass: function (cls) {\n        toggleClass(el, cls);\n        return this;\n      },\n      has: function (cls) {\n        return hasClass(el, cls);\n      },\n      hasClass: function (cls) {\n        return hasClass(el, cls);\n      }\n    };\n  }\n\n  classhelp.raw = {\n    has: hasClass,\n    add: addClass,\n    remove: removeClass,\n    toggle: toggleClass,\n    hasClass: hasClass,\n    addClass: addClass,\n    removeClass: removeClass,\n    toggleClass: toggleClass\n  };\n\n  return classhelp;\n});\n"
  ],
  "names": [],
  "mappings": ";;;;;;;;;;;;;AAAA,SAASA,WAAW,CAACC,SAAS,EAAE;EACrB,OAAO,IAAI,KAAK,CAACC,SAAU,GAAGD,SAAS,CAACE,SAAS,CAAC;AAC/B,CAAC;;;;;IAEF,IAAMA,QAAQ,GAAGC,OAAM,EAClB,IAAI,SAASA,QAAQ,GAAGC,OAAM,CAAC,GAAGD,QAAQ,CAACE,OAAO,CAACC,SAAS,CAACC;IAC3D,MAAM,GAAGF,QAAQ,CAACG,OAAO,CAAC;IACjB,MAAM,GAAGF,QAAQ,CAACG,OAAO,CAAC;IACjB,MAAM,GAAGF,QAAQ,CAACG,OAAO,CAAC;AACb,CAAC;;;;;IAEF,SAASA,SAAS,GAAGC,OAAO,CAACD,SAAS,CAACC,SAAS,CAAC;IACjB,MAAM,GAAGH,SAAS,CAACG,OAAO,CAAC;IACjB,MAAM,GAAGH,SAAS,CAACG,OAAO,CAAC;IACjB,MAAM,GAAGH,SAAS,CAACG,OAAO,CAAC;AACb,CAAC;;;;;IAEF,SAASA,SAAS,GAAGC,OAAO,CAACD,SAAS,CAACC,SAAS,CAAC;IACjB,MAAM,GAAGH,SAAS,CAACG,OAAO,CAAC;IACjB,MAAM,GAAGH,SAAS,CAACG,OAAO,CAAC;IACjB,MAAM,GAAGH,SAAS,CAACG,OAAO,CAAC;AACb,CAAC;;;;;IAEF,SAASA,SAAS,GAAGC,OAAO,CAACD,SAAS,CAACC,SAAS,CAAC;IACjB,MAAM,GAAGH,SAAS,CAACG,OAAO,CAAC;IACjB,MAAM,GAAGH,SAAS,CAACG,OAAO,CAAC;IACjB,MAAM,GAAGH,SAAS,CAACG,OAAO,CAAC;AACb,CAAC;;;;;IAEF,SAASA,SAAS,GAAGC,OAAO,CAACD,SAAS,CAACC,SAAS,CAAC;IACjB,MAAM,GAAGH,SAAS,CAACG,OAAO,CAAC;IACjB,MAAM,GAAGH,SAAS,CAACG,OAAO,CAAC;IACjB,MAAM,GAAGH,SAAS,CAACG,OAAO,CAAC;AACb,CAAC;;;;;IACV,SAASE,SAAS,GAAG;EACnB,OAAOJ,QAAQ,EAAG;IACf,OAAOF,OAAO,EAAG;IACZ,OAAO,EAAG;IACH,OAAO,EAAG;IACN,OAAO,EAAG;IACJ,OAAO,EAAG;IACN,OAAO,EAAG;IACJ,OAAO,EAAG;IACN,OAAO,EAAE;IACN,OAAO,EAAE;CACd,CAAC,CAAD,CAAD"
}
